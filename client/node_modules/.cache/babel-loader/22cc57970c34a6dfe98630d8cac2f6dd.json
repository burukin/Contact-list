{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agros\\\\PhpstormProjects\\\\contacts-manager\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\n\n/**\r\n * Created by agros on 07.06.2019.\r\n */\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchContactsAction } from '../../actions/contact';\nimport ContactItem from './ContactItem';\nimport ContactForm from './ContactForm';\n\nconst Contacts = ({\n  contact: {\n    contacts,\n    loading\n  },\n  fetchContactsAction,\n  location,\n  match\n}) => {\n  useEffect(() => {\n    fetchContactsAction();\n  }, [fetchContactsAction]);\n\n  const _getQueryVariables = () => {\n    const isNewPage = location.pathname.includes('new');\n    const page = parseInt(match.params.page, 10);\n    const skip = isNewPage ? (page - 1) * 10 : 0;\n    const first = isNewPage ? 10 : 100;\n    return {\n      first,\n      skip\n    };\n  };\n\n  console.log(location);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ContactForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"bg-primary p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"List of contacts\")), loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Loading\") : contacts.map(contact => {\n    return React.createElement(ContactItem, {\n      key: contact.id,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }));\n};\n\nContacts.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contact: state.contact\n});\n\nexport default connect(mapStateToProps, {\n  fetchContactsAction\n})(Contacts);","map":{"version":3,"sources":["C:\\Users\\agros\\PhpstormProjects\\contacts-manager\\client\\src\\components\\contacts\\Contacts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","fetchContactsAction","ContactItem","ContactForm","Contacts","contact","contacts","loading","location","match","_getQueryVariables","isNewPage","pathname","includes","page","parseInt","params","skip","first","console","log","map","id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,mBAAR,QAAkC,uBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAT;AAA8BN,EAAAA,mBAA9B;AAAmDO,EAAAA,QAAnD;AAA6DC,EAAAA;AAA7D,CAAD,KAAyE;AAEtFX,EAAAA,SAAS,CAAE,MAAM;AACbG,IAAAA,mBAAmB;AACtB,GAFQ,EAEN,CAACA,mBAAD,CAFM,CAAT;;AAIA,QAAMS,kBAAkB,GAAG,MAAM;AAC7B,UAAMC,SAAS,GAAGH,QAAQ,CAACI,QAAT,CAAkBC,QAAlB,CAA2B,KAA3B,CAAlB;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACN,KAAK,CAACO,MAAN,CAAaF,IAAd,EAAoB,EAApB,CAArB;AAEA,UAAMG,IAAI,GAAGN,SAAS,GAAG,CAACG,IAAI,GAAG,CAAR,IAAa,EAAhB,GAAqB,CAA3C;AACA,UAAMI,KAAK,GAAGP,SAAS,GAAG,EAAH,GAAQ,GAA/B;AACA,WAAO;AAAEO,MAAAA,KAAF;AAASD,MAAAA;AAAT,KAAP;AACH,GAPD;;AAQAE,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAFJ,EAKKD,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,GACJD,QAAQ,CAACe,GAAT,CAAahB,OAAO,IAAI;AACpB,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACiB,EAA1B;AAA8B,MAAA,OAAO,EAAEjB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CANR,CADJ;AAaH,CA5BD;;AA8BAD,QAAQ,CAACmB,SAAT,GAAqB;AACjBlB,EAAAA,OAAO,EAAEN,SAAS,CAACyB,MAAV,CAAiBC;AADT,CAArB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KACzB;AAACtB,EAAAA,OAAO,EAAEsB,KAAK,CAACtB;AAAhB,CADyB,CAA7B;;AAIA,eAAeL,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA;AAAD,CAAlB,CAAP,CAAgDG,QAAhD,CAAf","sourcesContent":["/**\r\n * Created by agros on 07.06.2019.\r\n */\r\nimport React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {fetchContactsAction} from '../../actions/contact';\r\nimport ContactItem from './ContactItem';\r\nimport ContactForm from './ContactForm';\r\n\r\nconst Contacts = ({contact:{contacts, loading}, fetchContactsAction, location, match}) => {\r\n\r\n    useEffect( () => {\r\n        fetchContactsAction();\r\n    }, [fetchContactsAction]);\r\n\r\n    const _getQueryVariables = () => {\r\n        const isNewPage = location.pathname.includes('new');\r\n        const page = parseInt(match.params.page, 10);\r\n\r\n        const skip = isNewPage ? (page - 1) * 10 : 0;\r\n        const first = isNewPage ? 10 : 100;\r\n        return { first, skip}\r\n    };\r\n    console.log(location );\r\n    return (\r\n        <Fragment>\r\n            <ContactForm />\r\n            <div className=\"bg-primary p\">\r\n                <h3>List of contacts</h3>\r\n            </div>\r\n            {loading ? <p>Loading</p>: (\r\n                contacts.map(contact => {\r\n                    return <ContactItem key={contact.id} contact={contact}/>\r\n                })\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nContacts.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => (\r\n    {contact: state.contact}\r\n);\r\n\r\nexport default connect(mapStateToProps, {fetchContactsAction})(Contacts);"]},"metadata":{},"sourceType":"module"}