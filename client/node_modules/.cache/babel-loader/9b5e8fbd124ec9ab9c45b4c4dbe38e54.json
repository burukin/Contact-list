{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\agros\\\\PhpstormProjects\\\\contacts-manager\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\agros\\\\PhpstormProjects\\\\contacts-manager\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    {\\n        contacts {\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\r\n * Created by agros on 07.06.2019.\r\n */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ContactItem from './ContactItem';\n\nconst Contacts = ({\n  data: {\n    contacts,\n    loading\n  }\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"List of contacts\"), loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Loading\") : contacts.map(contact => {\n    return React.createElement(ContactItem, {\n      key: contact.id,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }));\n};\n\nconst query = gql(_templateObject());\nexport default graphql(query)(Contacts);","map":{"version":3,"sources":["C:\\Users\\agros\\PhpstormProjects\\contacts-manager\\client\\src\\components\\contacts\\Contacts.js"],"names":["React","Fragment","PropTypes","graphql","gql","ContactItem","Contacts","data","contacts","loading","map","contact","id","query"],"mappings":";;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAN,CAAD,KAAgC;AAC7C,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,GACJD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAG;AACnB,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,MAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAHR,CADJ;AAUH,CAXD;;AAaA,MAAME,KAAK,GAAGT,GAAH,mBAAX;AAQA,eAAeD,OAAO,CAACU,KAAD,CAAP,CAAeP,QAAf,CAAf","sourcesContent":["/**\r\n * Created by agros on 07.06.2019.\r\n */\r\nimport React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {graphql} from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nconst Contacts = ({data:{contacts, loading}}) => {\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">List of contacts</h1>\r\n            {loading ? <p>Loading</p>: (\r\n                contacts.map(contact=> {\r\n                    return <ContactItem key={contact.id} contact={contact}/>\r\n                })\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst query = gql`\r\n    {\r\n        contacts {\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport default graphql(query)(Contacts);"]},"metadata":{},"sourceType":"module"}