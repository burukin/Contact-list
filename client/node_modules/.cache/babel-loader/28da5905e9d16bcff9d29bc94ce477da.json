{"ast":null,"code":"/**\r\n * Created by agros on 08.06.2019.\r\n */\nimport { GET_CONTACT, GET_CONTACTS, CREATE_CONTACT, DELETE_CONTACT, EDIT_CONTACT, CLEAR_CONTACT } from './actionTypes';\nimport { client } from '../utils/apolloClient';\nimport fetchContact from '../queries/fetchContact';\nimport fetchContacts from '../queries/fetchContacts';\nimport createContact from '../queries/createContact';\nimport deleteContact from '../queries/deleteContact';\nimport editContact from '../queries/editContact';\nimport fetchCallHistory from '../queries/fetchCallHistory';\nexport const fetchContactAction = id => async dispatch => {\n  const request = await client.query({\n    query: fetchContact,\n    variables: {\n      id: id\n    }\n  });\n  const response = await request;\n  dispatch({\n    type: GET_CONTACT,\n    payload: response.data\n  });\n};\nexport const fetchCallHistoryAction = id => async dispatch => {\n  const request = await client.query({\n    query: fetchCallHistory,\n    variables: {\n      id: id\n    }\n  });\n  const response = await request;\n  dispatch({\n    type: GET_CONTACT,\n    payload: response.data\n  });\n};\nexport const fetchContactsAction = () => async dispatch => {\n  const request = await client.query({\n    query: fetchContacts\n  });\n  const response = await request;\n  dispatch({\n    type: GET_CONTACTS,\n    payload: response.data\n  });\n};\nexport const createContactAction = formData => async dispatch => {\n  const request = await client.mutate({\n    mutation: createContact,\n    variables: {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email\n    }\n  });\n  const response = await request;\n  dispatch({\n    type: CREATE_CONTACT,\n    payload: response.data.addContact\n  });\n};\nexport const editContactAction = formData => async dispatch => {\n  const request = await client.mutate({\n    mutation: editContact,\n    variables: {\n      name: formData.name,\n      phone: formData.phone,\n      email: formData.email\n    }\n  });\n  const response = await request;\n  dispatch({\n    type: EDIT_CONTACT,\n    payload: response.data.editContact\n  });\n};\nexport const deleteContactAction = id => async dispatch => {\n  const request = await client.mutate({\n    mutation: deleteContact,\n    variables: {\n      id: id\n    }\n  });\n  await request;\n  dispatch({\n    type: DELETE_CONTACT,\n    payload: id\n  });\n};\nexport const clearContact = () => async dispatch => {\n  dispatch({\n    type: CLEAR_CONTACT\n  });\n};","map":{"version":3,"sources":["C:\\Users\\agros\\PhpstormProjects\\contacts-manager\\client\\src\\actions\\contact.js"],"names":["GET_CONTACT","GET_CONTACTS","CREATE_CONTACT","DELETE_CONTACT","EDIT_CONTACT","CLEAR_CONTACT","client","fetchContact","fetchContacts","createContact","deleteContact","editContact","fetchCallHistory","fetchContactAction","id","dispatch","request","query","variables","response","type","payload","data","fetchCallHistoryAction","fetchContactsAction","createContactAction","formData","mutate","mutation","name","phone","email","addContact","editContactAction","deleteContactAction","clearContact"],"mappings":"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","sourcesContent":["/**\r\n * Created by agros on 08.06.2019.\r\n */\r\nimport {GET_CONTACT, GET_CONTACTS, CREATE_CONTACT, DELETE_CONTACT, EDIT_CONTACT, CLEAR_CONTACT} from './actionTypes';\r\nimport {client} from '../utils/apolloClient';\r\n\r\nimport fetchContact from '../queries/fetchContact';\r\nimport fetchContacts from '../queries/fetchContacts';\r\nimport createContact from '../queries/createContact';\r\nimport deleteContact from '../queries/deleteContact';\r\nimport editContact from '../queries/editContact';\r\nimport fetchCallHistory from '../queries/fetchCallHistory';\r\n\r\nexport const fetchContactAction = id => async dispatch => {\r\n    const request = await client.query({\r\n        query: fetchContact,\r\n        variables: {\r\n            id: id\r\n        }\r\n    });\r\n    const response = await request;\r\n    dispatch({\r\n        type: GET_CONTACT,\r\n        payload: response.data\r\n    })\r\n};\r\n\r\nexport const fetchCallHistoryAction = id => async dispatch => {\r\n    const request = await client.query({\r\n        query: fetchCallHistory,\r\n        variables: {\r\n            id: id\r\n        }\r\n    });\r\n    const response = await request;\r\n    dispatch({\r\n        type: GET_CONTACT,\r\n        payload: response.data\r\n    })\r\n};\r\n\r\nexport const fetchContactsAction = () => async dispatch => {\r\n    const request = await client.query({\r\n        query: fetchContacts\r\n    });\r\n    const response = await request;\r\n    dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: response.data\r\n    })\r\n};\r\n\r\nexport const createContactAction = formData => async dispatch => {\r\n    const request = await client.mutate({\r\n        mutation: createContact,\r\n        variables: {\r\n            name: formData.name,\r\n            phone: formData.phone,\r\n            email: formData.email\r\n        }\r\n    });\r\n\r\n    const response = await request;\r\n    dispatch({\r\n        type: CREATE_CONTACT,\r\n        payload: response.data.addContact\r\n    })\r\n};\r\n\r\nexport const editContactAction = formData => async dispatch => {\r\n    const request = await client.mutate({\r\n        mutation: editContact,\r\n        variables: {\r\n            name: formData.name,\r\n            phone: formData.phone,\r\n            email: formData.email\r\n        }\r\n    });\r\n\r\n    const response = await request;\r\n    dispatch({\r\n        type: EDIT_CONTACT,\r\n        payload: response.data.editContact\r\n    })\r\n};\r\n\r\nexport const deleteContactAction = id => async dispatch => {\r\n    const request = await client.mutate({\r\n        mutation: deleteContact,\r\n        variables: {\r\n            id: id\r\n        }\r\n    });\r\n    await request;\r\n    dispatch({\r\n        type: DELETE_CONTACT,\r\n        payload: id\r\n    })\r\n};\r\n\r\nexport const clearContact = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_CONTACT\r\n    })\r\n};"]},"metadata":{},"sourceType":"module"}